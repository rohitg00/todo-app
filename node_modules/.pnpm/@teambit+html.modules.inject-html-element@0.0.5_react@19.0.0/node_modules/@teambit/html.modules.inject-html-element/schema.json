{
  "__schema": "APISchema",
  "location": {
    "filePath": "index.ts",
    "line": 1,
    "character": 1
  },
  "module": {
    "__schema": "ModuleSchema",
    "location": {
      "filePath": "index.ts",
      "line": 1,
      "character": 1
    },
    "exports": [
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 1,
          "character": 10
        },
        "name": "inject",
        "exportNode": {
          "__schema": "FunctionLikeSchema",
          "location": {
            "filePath": "inject-html-element.ts",
            "line": 58,
            "character": 1
          },
          "doc": {
            "__schema": "DocSchema",
            "location": {
              "filePath": "inject-html-element.ts",
              "line": 52,
              "character": 1
            },
            "raw": "/**\n * Simple function to inject an element into an html string.\n * @param html\n * @param element\n * @returns html with injected element\n */",
            "comment": "Simple function to inject an element into an html string.",
            "tags": [
              {
                "__schema": "PropertyLikeTagSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 54,
                  "character": 4
                },
                "name": "html",
                "tagName": "parameter"
              },
              {
                "__schema": "PropertyLikeTagSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 55,
                  "character": 4
                },
                "name": "element",
                "tagName": "parameter"
              },
              {
                "__schema": "ReturnTagSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 56,
                  "character": 4
                },
                "tagName": "return",
                "comment": "html with injected element"
              }
            ]
          },
          "signature": "function inject(html: string, element: InjectedHtmlElement): string",
          "name": "inject",
          "params": [
            {
              "__schema": "ParameterSchema",
              "location": {
                "filePath": "inject-html-element.ts",
                "line": 58,
                "character": 24
              },
              "name": "html",
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 58,
                  "character": 30
                },
                "name": "string"
              },
              "isOptional": false,
              "isSpread": false
            },
            {
              "__schema": "ParameterSchema",
              "location": {
                "filePath": "inject-html-element.ts",
                "line": 58,
                "character": 38
              },
              "name": "element",
              "type": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 58,
                  "character": 47
                },
                "name": "InjectedHtmlElement"
              },
              "isOptional": false,
              "isSpread": false
            }
          ],
          "returnType": {
            "__schema": "KeywordTypeSchema",
            "location": {
              "filePath": "inject-html-element.ts",
              "line": 58,
              "character": 69
            },
            "name": "string"
          },
          "modifiers": [
            "export"
          ]
        }
      },
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 2,
          "character": 15
        },
        "name": "InjectedHtmlElement",
        "exportNode": {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "inject-html-element.ts",
            "line": 22,
            "character": 1
          },
          "signature": "type InjectedHtmlElement = HtmlElementWithAttributes | HtmlElementWithRaw",
          "name": "InjectedHtmlElement",
          "type": {
            "__schema": "TypeUnionSchema",
            "location": {
              "filePath": "inject-html-element.ts",
              "line": 23,
              "character": 3
            },
            "types": [
              {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 23,
                  "character": 5
                },
                "name": "HtmlElementWithAttributes",
                "internalFilePath": "inject-html-element.ts"
              },
              {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 24,
                  "character": 5
                },
                "name": "HtmlElementWithRaw",
                "internalFilePath": "inject-html-element.ts"
              }
            ]
          }
        }
      }
    ],
    "internals": []
  },
  "internals": [
    {
      "__schema": "ModuleSchema",
      "location": {
        "filePath": "inject-html-element.ts",
        "line": 1,
        "character": 1
      },
      "exports": [
        {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "inject-html-element.ts",
            "line": 22,
            "character": 1
          },
          "signature": "type InjectedHtmlElement = HtmlElementWithAttributes | HtmlElementWithRaw",
          "name": "InjectedHtmlElement",
          "type": {
            "__schema": "TypeUnionSchema",
            "location": {
              "filePath": "inject-html-element.ts",
              "line": 23,
              "character": 3
            },
            "types": [
              {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 23,
                  "character": 5
                },
                "name": "HtmlElementWithAttributes",
                "internalFilePath": "inject-html-element.ts"
              },
              {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 24,
                  "character": 5
                },
                "name": "HtmlElementWithRaw",
                "internalFilePath": "inject-html-element.ts"
              }
            ]
          }
        },
        {
          "__schema": "FunctionLikeSchema",
          "location": {
            "filePath": "inject-html-element.ts",
            "line": 58,
            "character": 1
          },
          "doc": {
            "__schema": "DocSchema",
            "location": {
              "filePath": "inject-html-element.ts",
              "line": 52,
              "character": 1
            },
            "raw": "/**\n * Simple function to inject an element into an html string.\n * @param html\n * @param element\n * @returns html with injected element\n */",
            "comment": "Simple function to inject an element into an html string.",
            "tags": [
              {
                "__schema": "PropertyLikeTagSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 54,
                  "character": 4
                },
                "name": "html",
                "tagName": "parameter"
              },
              {
                "__schema": "PropertyLikeTagSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 55,
                  "character": 4
                },
                "name": "element",
                "tagName": "parameter"
              },
              {
                "__schema": "ReturnTagSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 56,
                  "character": 4
                },
                "tagName": "return",
                "comment": "html with injected element"
              }
            ]
          },
          "signature": "function inject(html: string, element: InjectedHtmlElement): string",
          "name": "inject",
          "params": [
            {
              "__schema": "ParameterSchema",
              "location": {
                "filePath": "inject-html-element.ts",
                "line": 58,
                "character": 24
              },
              "name": "html",
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 58,
                  "character": 30
                },
                "name": "string"
              },
              "isOptional": false,
              "isSpread": false
            },
            {
              "__schema": "ParameterSchema",
              "location": {
                "filePath": "inject-html-element.ts",
                "line": 58,
                "character": 38
              },
              "name": "element",
              "type": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 58,
                  "character": 47
                },
                "name": "InjectedHtmlElement"
              },
              "isOptional": false,
              "isSpread": false
            }
          ],
          "returnType": {
            "__schema": "KeywordTypeSchema",
            "location": {
              "filePath": "inject-html-element.ts",
              "line": 58,
              "character": 69
            },
            "name": "string"
          },
          "modifiers": [
            "export"
          ]
        }
      ],
      "internals": [
        {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "inject-html-element.ts",
            "line": 3,
            "character": 1
          },
          "signature": "type HtmlElementBasic = {\n    parent: 'head' | 'body' | string;\n    position: 'prepend' | 'append';\n}",
          "name": "HtmlElementBasic",
          "type": {
            "__schema": "TypeLiteralSchema",
            "location": {
              "filePath": "inject-html-element.ts",
              "line": 3,
              "character": 25
            },
            "members": [
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 4,
                  "character": 3
                },
                "signature": "(property) parent: string",
                "name": "parent",
                "type": {
                  "__schema": "TypeUnionSchema",
                  "location": {
                    "filePath": "inject-html-element.ts",
                    "line": 4,
                    "character": 11
                  },
                  "types": [
                    {
                      "__schema": "LiteralTypeSchema",
                      "location": {
                        "filePath": "inject-html-element.ts",
                        "line": 4,
                        "character": 11
                      },
                      "name": "'head'"
                    },
                    {
                      "__schema": "LiteralTypeSchema",
                      "location": {
                        "filePath": "inject-html-element.ts",
                        "line": 4,
                        "character": 20
                      },
                      "name": "'body'"
                    },
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "inject-html-element.ts",
                        "line": 4,
                        "character": 29
                      },
                      "name": "string"
                    }
                  ]
                },
                "isOptional": false
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 5,
                  "character": 3
                },
                "signature": "(property) position: \"prepend\" | \"append\"",
                "name": "position",
                "type": {
                  "__schema": "TypeUnionSchema",
                  "location": {
                    "filePath": "inject-html-element.ts",
                    "line": 5,
                    "character": 13
                  },
                  "types": [
                    {
                      "__schema": "LiteralTypeSchema",
                      "location": {
                        "filePath": "inject-html-element.ts",
                        "line": 5,
                        "character": 13
                      },
                      "name": "'prepend'"
                    },
                    {
                      "__schema": "LiteralTypeSchema",
                      "location": {
                        "filePath": "inject-html-element.ts",
                        "line": 5,
                        "character": 25
                      },
                      "name": "'append'"
                    }
                  ]
                },
                "isOptional": false
              }
            ]
          }
        },
        {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "inject-html-element.ts",
            "line": 8,
            "character": 1
          },
          "signature": "type HtmlElementWithAttributes = HtmlElementBasic & {\n    attributes?: {\n        [key: string]: string;\n    };\n    tag: string;\n    content?: string;\n    raw?: never;\n}",
          "name": "HtmlElementWithAttributes",
          "type": {
            "__schema": "TypeIntersectionSchema",
            "location": {
              "filePath": "inject-html-element.ts",
              "line": 8,
              "character": 34
            },
            "types": [
              {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 8,
                  "character": 34
                },
                "name": "HtmlElementBasic",
                "internalFilePath": "inject-html-element.ts"
              },
              {
                "__schema": "TypeLiteralSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 8,
                  "character": 53
                },
                "members": [
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "inject-html-element.ts",
                      "line": 9,
                      "character": 3
                    },
                    "signature": "(property) attributes?: {\n    [key: string]: string;\n}",
                    "name": "attributes",
                    "type": {
                      "__schema": "TypeLiteralSchema",
                      "location": {
                        "filePath": "inject-html-element.ts",
                        "line": 9,
                        "character": 16
                      },
                      "members": [
                        {
                          "__schema": "IndexSignatureSchema",
                          "location": {
                            "filePath": "inject-html-element.ts",
                            "line": 9,
                            "character": 18
                          },
                          "keyType": {
                            "__schema": "ParameterSchema",
                            "location": {
                              "filePath": "inject-html-element.ts",
                              "line": 9,
                              "character": 19
                            },
                            "name": "key",
                            "type": {
                              "__schema": "KeywordTypeSchema",
                              "location": {
                                "filePath": "inject-html-element.ts",
                                "line": 9,
                                "character": 24
                              },
                              "name": "string"
                            },
                            "isOptional": false,
                            "isSpread": false
                          },
                          "valueType": {
                            "__schema": "KeywordTypeSchema",
                            "location": {
                              "filePath": "inject-html-element.ts",
                              "line": 9,
                              "character": 33
                            },
                            "name": "string"
                          }
                        }
                      ]
                    },
                    "isOptional": true
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "inject-html-element.ts",
                      "line": 10,
                      "character": 3
                    },
                    "signature": "(property) tag: string",
                    "name": "tag",
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "inject-html-element.ts",
                        "line": 10,
                        "character": 8
                      },
                      "name": "string"
                    },
                    "isOptional": false
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "inject-html-element.ts",
                      "line": 11,
                      "character": 3
                    },
                    "signature": "(property) content?: string",
                    "name": "content",
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "inject-html-element.ts",
                        "line": 11,
                        "character": 13
                      },
                      "name": "string"
                    },
                    "isOptional": true
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "inject-html-element.ts",
                      "line": 12,
                      "character": 3
                    },
                    "signature": "(property) raw?: never",
                    "name": "raw",
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "inject-html-element.ts",
                        "line": 12,
                        "character": 9
                      },
                      "name": "never"
                    },
                    "isOptional": true
                  }
                ]
              }
            ]
          }
        },
        {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "inject-html-element.ts",
            "line": 15,
            "character": 1
          },
          "signature": "type HtmlElementWithRaw = HtmlElementBasic & {\n    raw?: string;\n    attributes?: never;\n    tag?: never;\n    content?: never;\n}",
          "name": "HtmlElementWithRaw",
          "type": {
            "__schema": "TypeIntersectionSchema",
            "location": {
              "filePath": "inject-html-element.ts",
              "line": 15,
              "character": 27
            },
            "types": [
              {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 15,
                  "character": 27
                },
                "name": "HtmlElementBasic",
                "internalFilePath": "inject-html-element.ts"
              },
              {
                "__schema": "TypeLiteralSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 15,
                  "character": 46
                },
                "members": [
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "inject-html-element.ts",
                      "line": 16,
                      "character": 3
                    },
                    "signature": "(property) raw?: string",
                    "name": "raw",
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "inject-html-element.ts",
                        "line": 16,
                        "character": 9
                      },
                      "name": "string"
                    },
                    "isOptional": true
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "inject-html-element.ts",
                      "line": 17,
                      "character": 3
                    },
                    "signature": "(property) attributes?: never",
                    "name": "attributes",
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "inject-html-element.ts",
                        "line": 17,
                        "character": 16
                      },
                      "name": "never"
                    },
                    "isOptional": true
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "inject-html-element.ts",
                      "line": 18,
                      "character": 3
                    },
                    "signature": "(property) tag?: never",
                    "name": "tag",
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "inject-html-element.ts",
                        "line": 18,
                        "character": 9
                      },
                      "name": "never"
                    },
                    "isOptional": true
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "inject-html-element.ts",
                      "line": 19,
                      "character": 3
                    },
                    "signature": "(property) content?: never",
                    "name": "content",
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "inject-html-element.ts",
                        "line": 19,
                        "character": 13
                      },
                      "name": "never"
                    },
                    "isOptional": true
                  }
                ]
              }
            ]
          }
        },
        {
          "__schema": "ModuleSchema",
          "location": {
            "filePath": "inject-html-element.ts",
            "line": 26,
            "character": 1
          },
          "exports": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "inject-html-element.ts",
                "line": 26,
                "character": 7
              },
              "signature": "const VOID_ELEMENT_TAGS: string[]",
              "name": "VOID_ELEMENT_TAGS",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 26,
                  "character": 7
                },
                "type": "string[]"
              },
              "isOptional": false,
              "defaultValue": "[\n  'area',\n  'base',\n  'br',\n  'col',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'link',\n  'meta',\n  'source',\n  'track',\n  'wbr',\n]"
            }
          ],
          "internals": []
        },
        {
          "__schema": "FunctionLikeSchema",
          "location": {
            "filePath": "inject-html-element.ts",
            "line": 48,
            "character": 1
          },
          "doc": {
            "__schema": "DocSchema",
            "location": {
              "filePath": "inject-html-element.ts",
              "line": 42,
              "character": 1
            },
            "raw": "/**\n * Check if an element tag is void.\n *\n * @param {string} tag - the element tag\n * @returns {boolean} true | false\n */",
            "comment": "Check if an element tag is void.",
            "tags": [
              {
                "__schema": "PropertyLikeTagSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 45,
                  "character": 4
                },
                "name": "tag",
                "tagName": "parameter",
                "comment": "- the element tag",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "inject-html-element.ts",
                    "line": 45,
                    "character": 12
                  },
                  "name": "string"
                }
              },
              {
                "__schema": "ReturnTagSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 46,
                  "character": 4
                },
                "tagName": "return",
                "comment": "true | false",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "inject-html-element.ts",
                    "line": 46,
                    "character": 14
                  },
                  "name": "boolean"
                }
              }
            ]
          },
          "signature": "function isVoidElementTag(tag: string): boolean",
          "name": "isVoidElementTag",
          "params": [
            {
              "__schema": "ParameterSchema",
              "location": {
                "filePath": "inject-html-element.ts",
                "line": 48,
                "character": 27
              },
              "name": "tag",
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "inject-html-element.ts",
                  "line": 48,
                  "character": 32
                },
                "name": "string"
              },
              "isOptional": false,
              "isSpread": false
            }
          ],
          "returnType": {
            "__schema": "TypeRefSchema",
            "location": {
              "filePath": "inject-html-element.ts",
              "line": 48,
              "character": 1
            },
            "name": "isVoidElementTag",
            "internalFilePath": "inject-html-element.ts"
          },
          "modifiers": []
        }
      ]
    }
  ],
  "componentId": {
    "scope": "teambit.html",
    "name": "modules/inject-html-element",
    "version": "09903e0c96c21a2d4dd285250d45765d84118709"
  },
  "taggedModuleExports": []
}