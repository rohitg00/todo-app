import React from 'react';
import { ContentTabs } from './content-tabs';
const FirstContent = () => React.createElement("div", null, "First content!");
const SecondContent = () => React.createElement("div", null, "Second content!");
const FirstTitle = () => React.createElement("h4", null, "First");
const SecondTitle = () => React.createElement("h4", null, "Second");
const content = [
    { title: 'First', body: React.createElement(FirstContent, null) },
    { title: 'Second', body: React.createElement(SecondContent, null) },
];
const contentB = [
    { title: React.createElement(FirstTitle, null), body: React.createElement(FirstContent, null) },
    { title: React.createElement(SecondTitle, null), body: React.createElement(SecondContent, null) },
];
export const BasicContentTabs = () => {
    return React.createElement(ContentTabs, { tabsContent: content });
};
export const ContentTabsWithUrlParam = () => {
    return (React.createElement(ContentTabs, { tabsUrlParam: "my_tabs", tabsContent: content }));
};
export const MultipleTabs = () => {
    return (React.createElement("div", null,
        React.createElement(ContentTabs, { tabsContent: content }),
        React.createElement("div", { style: { height: 75 } }),
        React.createElement(ContentTabs, { tabsContent: content })));
};
export const ContentTabsWithJsxTitle = () => {
    return React.createElement(ContentTabs, { tabsContent: contentB });
};
const DynamicContent = () => {
    const [expanded, setExpanded] = React.useState(false);
    return (React.createElement("div", { style: { padding: '20px' } },
        React.createElement("h3", null, "Dynamic Height Content"),
        React.createElement("p", null, "This section can expand and collapse to test dynamic resizing."),
        React.createElement("button", { onClick: () => setExpanded(!expanded), style: { marginBottom: '20px' } }, expanded ? 'Show Less' : 'Show More'),
        expanded && (React.createElement("div", null,
            React.createElement("p", null, "Extra content that appears when expanded!"),
            Array(5).fill(null).map((_, i) => (React.createElement("p", { key: i },
                "Additional paragraph ",
                i + 1,
                " with some content to increase the height.")))))));
};
const ShortContent = () => (React.createElement("div", { style: { padding: '20px' } }, "Short content that takes minimal space!"));
const LongContent = () => (React.createElement("div", { style: { padding: '20px' } },
    React.createElement("h3", null, "Long Content Section"),
    React.createElement("p", null, "This is a much longer content section to test resize functionality."),
    Array(10).fill(null).map((_, i) => (React.createElement("div", { key: i, style: { marginBottom: '20px' } },
        React.createElement("h4", null,
            "Section ",
            i + 1),
        React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."),
        React.createElement("ul", null,
            React.createElement("li", null,
                "Important point ",
                i + 1),
            React.createElement("li", null, "Another crucial detail"),
            React.createElement("li", null, "More information here")))))));
const mixedContent = [
    { title: 'Short', body: React.createElement(ShortContent, null) },
    { title: 'Long', body: React.createElement(LongContent, null) },
    { title: 'Dynamic', body: React.createElement(DynamicContent, null) }
];
export const DynamicLengthContentTabs = () => {
    return React.createElement(ContentTabs, { tabsContent: mixedContent });
};
//# sourceMappingURL=content-tabs.composition.js.map