import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState, useMemo, memo } from 'react';
import classNames from 'classnames';
import copy from 'copy-to-clipboard';
import SyntaxHighlighter from 'react-syntax-highlighter/dist/esm/prism-light';
import tsxSyntax from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';
import defaultTheme from 'react-syntax-highlighter/dist/esm/styles/prism/vsc-dark-plus';
import { CopiedMessage } from '@teambit/documenter.ui.copied-message';
import styles from './code-snippet.module.scss';
SyntaxHighlighter.registerLanguage('tsx', tsxSyntax);
const customStyles = { fontFamily: 'roboto mono', fontSize: 12 };
/**
 * A code snippet component
 */
export function CodeSnippet({ className, frameClass, theme = defaultTheme, language = 'tsx', children, ...rest }) {
    const [isCopied, setIsCopied] = useState(false);
    const handleClick = () => {
        setIsCopied(true);
        setTimeout(() => setIsCopied(false), 2000);
        copy(children.toString());
    };
    const trimmedChildren = useMemo(() => children.trim(), [children]);
    return (_jsxs("div", { className: classNames(styles.snippetWrapper, className), children: [_jsx(Highlighter, { ...rest, className: classNames(styles.codeSnippet, frameClass), language: language, style: theme, customStyle: customStyles, children: trimmedChildren }), _jsxs("div", { className: styles.copy, children: [_jsx(CopiedMessage, { show: isCopied }), _jsx("span", { role: "button", onClick: handleClick, onKeyUp: handleClick, tabIndex: 0, children: _jsx("img", { src: "https://static.bit.cloud/Community/icons/copy.svg", className: styles.copyIcon, alt: "Copy" }) })] })] }));
}
const Highlighter = memo(function SnippetWrapper(props) {
    return _jsx(SyntaxHighlighter, { ...props });
});
//# sourceMappingURL=code-snippet.js.map