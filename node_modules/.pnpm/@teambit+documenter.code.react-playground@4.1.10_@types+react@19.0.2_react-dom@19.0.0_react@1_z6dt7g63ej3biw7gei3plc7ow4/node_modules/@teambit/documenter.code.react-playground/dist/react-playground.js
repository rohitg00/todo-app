import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { useMemo } from 'react';
import classNames from 'classnames';
import { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live';
import { SplitPane, Pane, Layout, } from '@teambit/base-ui.surfaces.split-pane.split-pane';
import { HoverSplitter } from '@teambit/base-ui.surfaces.split-pane.hover-splitter';
// @ts-ignore - missing types
import useDimensions from 'react-use-dimensions';
import { useDebounce } from 'use-debounce';
import prismTheme from 'prism-react-renderer/themes/oceanicNext';
import { Error as errorClass } from '@teambit/base-ui.input.error';
import styles from './react-playground.module.scss';
/**
 *
 * A react-live wrapper with document oriented features.
 */
export function Playground({ code, scope, style, className, ...rest }) {
    // don't show trailing new line at the end of the file
    const codeMemoed = useMemo(() => code?.toString().replace(/\n$/, '').trim(), [code]);
    const [ref, { width }] = useDimensions();
    const debouncedSize = useDebounce(width, 300, { leading: true });
    const isColumn = +debouncedSize[0] <= 500;
    const placement = isColumn ? Layout.columnReverse : Layout.row;
    if (!width)
        return _jsx("div", { ref: ref });
    return (_jsx(LiveProvider, { code: codeMemoed, scope: scope, theme: prismTheme, children: _jsx("div", { ref: ref, className: classNames(className, styles.playground, isColumn ? styles.column : styles.row), ...rest, children: _jsxs(SplitPane, { className: styles.main, size: '50%', layout: placement, children: [_jsx(Pane, { className: classNames(styles.codePane), children: _jsx(LiveEditor, { className: classNames(styles.editor) }) }), _jsx(HoverSplitter, { className: styles.splitter }), _jsx(Pane, { className: classNames(styles.previewPane), children: _jsxs(_Fragment, { children: [_jsx(LivePreview, { className: styles.previewBox }), _jsx(LiveError, { className: classNames(errorClass, styles.error) })] }) })] }) }) }));
}
//# sourceMappingURL=react-playground.js.map